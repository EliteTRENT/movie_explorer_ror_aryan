openapi: 3.0.1
info:
  title: API V1
  version: v1
  description: API for managing users and movies
paths:
  "/users":
    post:
      summary: User registration
      tags:
      - Authentication
      responses:
        '201':
          description: User created successfully
        '422':
          description: Invalid registration request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    mobile_number:
                      type: string
                  required:
                  - name
                  - email
                  - password
                  - mobile_number
              required:
              - user
  "/users/sign_in":
    post:
      summary: User login
      tags:
      - Authentication
      responses:
        '200':
          description: User logged in successfully
        '401':
          description: Unauthorized login attempt
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
  "/users/sign_out":
    delete:
      summary: User logout
      tags:
      - Authentication
      security:
      - BearerAuth: []
      responses:
        '204':
          description: User logged out successfully
  "/api/v1/current_user":
    get:
      summary: Fetch current user
      tags:
      - Users
      security:
      - BearerAuth: []
      responses:
        '200':
          description: User details returned
        '401':
          description: Unauthorized access
  "/api/v1/toggle_notifications":
    patch:
      summary: Toggle user notification preference
      tags:
        - Users
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Notifications preference updated successfully
        '401':
          description: Unauthorized access
        '422':
          description: Invalid request
  "/api/v1/update_device_token":
    post:
      summary: Update user device token
      tags:
        - Users
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                device_token:
                  type: string
                  example: "abc123deviceToken"
              required:
                - device_token
      responses:
        '200':
          description: Device token updated successfully
        '401':
          description: Unauthorized access
        '422':
          description: Invalid request
  "/api/v1/movies":
    get:
      summary: List movies
      tags:
      - Movies
      parameters:
      - name: title
        in: query
        description: Filter movies by title (case-insensitive)
        required: false
      - name: genre
        in: query
        description: Filter movies by genre
        required: false
      - name: page
        in: query
        description: Page number for pagination
        required: false
      - name: per_page
        in: query
        description: Number of movies per page
        required: false
      responses:
        '200':
          description: List of movies
        '404':
          description: No movies found
    post:
      summary: Create a new movie
      tags:
      - Movies
      security:
      - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                movie[title]:
                  type: string
                movie[genre]:
                  type: string
                movie[release_year]:
                  type: integer
                movie[rating]:
                  type: number
                movie[director]:
                  type: string
                movie[duration]:
                  type: integer
                movie[description]:
                  type: string
                movie[premium]:
                  type: boolean
                movie[poster]:
                  type: string
                  format: binary
                movie[banner]:
                  type: string
                  format: binary
              required:
              - movie[title]
              - movie[genre]
              - movie[release_year]
              - movie[director]
              - movie[duration]
              - movie[description]
      responses:
        '201':
          description: Movie created successfully
        '401':
          description: Unauthorized
        '422':
          description: Invalid request
  "/api/v1/movies/{id}":
    get:
      summary: Fetch a movie by ID
      tags:
      - Movies
      parameters:
      - name: id
        in: path
        description: ID of the movie
        required: true
      responses:
        '200':
          description: Movie details
        '404':
          description: Movie not found
    patch:
      summary: Update a movie
      tags:
      - Movies
      security:
      - BearerAuth: []
      parameters:
      - name: id
        in: path
        description: ID of the movie to update
        required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                movie[title]:
                  type: string
                movie[genre]:
                  type: string
                movie[release_year]:
                  type: integer
                movie[rating]:
                  type: number
                movie[director]:
                  type: string
                movie[duration]:
                  type: integer
                movie[description]:
                  type: string
                movie[premium]:
                  type: boolean
                movie[poster]:
                  type: string
                  format: binary
                movie[banner]:
                  type: string
                  format: binary
      responses:
        '200':
          description: Movie updated successfully
        '401':
          description: Unauthorized
        '404':
          description: Movie not found
        '422':
          description: Invalid request
    delete:
      summary: Delete a movie
      tags:
      - Movies
      security:
      - BearerAuth: []
      parameters:
      - name: id
        in: path
        description: ID of the movie to delete
        required: true
      responses:
        '204':
          description: Movie deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Movie not found
  "/api/v1/subscriptions":
    post:
      summary: Create a subscription
      tags:
      - Subscriptions
      security:
      - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_type:
                  type: string
                  enum: ["1_day", "1_month", "3_months"]
                  description: The type of subscription plan
              required:
              - plan_type
        required: true
      responses:
        '200':
          description: Subscription session created successfully
        '400':
          description: Invalid plan type
        '401':
          description: Unauthorized
  "/api/v1/subscriptions/status":
    get:
      summary: Check subscription status
      tags:
      - Subscriptions
      security:
      - BearerAuth: []
      responses:
        '200':
          description: Subscription status retrieved successfully
        '401':
          description: Unauthorized
        '404':
          description: No active subscription found
  "/api/v1/subscriptions/success":
    get:
      summary: Handle successful subscription payment
      tags:
      - Subscriptions
      parameters:
      - name: session_id
        in: query
        description: Stripe checkout session ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Subscription updated successfully
        '404':
          description: Subscription not found
servers:
- url: http://localhost:3000
  description: Local server
- url: https://movie-explorer-app.onrender.com
  description: Production server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
